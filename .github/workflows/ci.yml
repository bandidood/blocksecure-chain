name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Build all packages
      run: npm run build
    
    - name: Run tests
      run: npm test

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run npm audit
      run: npm audit --audit-level=high
      continue-on-error: true
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install Slither
      run: pip3 install slither-analyzer
    
    - name: Run Slither analysis
      run: cd packages/contracts && slither . --json slither-report.json
      continue-on-error: true
    
    - name: Upload Slither report
      uses: actions/upload-artifact@v4
      with:
        name: slither-report
        path: packages/contracts/slither-report.json

  contract-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Compile contracts
      run: npm run contracts:compile
    
    - name: Run contract tests
      run: npm run contracts:test
    
    - name: Generate coverage report
      run: cd packages/contracts && npx hardhat coverage
    
    - name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        files: ./packages/contracts/coverage/lcov.info
        flags: contracts

  deploy:
    runs-on: ubuntu-latest
    needs: [test, security-scan, contract-tests]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build production
      run: npm run build
    
    - name: Deploy to staging
      run: echo "Deploy to staging environment"
      # Add actual deployment commands here
